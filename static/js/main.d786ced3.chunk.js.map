{"version":3,"sources":["components/Button/index.jsx","components/SearchInput/index.jsx","assets/logo.svg","components/Header/index.jsx","components/ContentList/index.jsx","hooks/useFetchContent.js","components/App.jsx","index.jsx"],"names":["Button","props","className","SearchInput","onSearch","useState","value","setValue","onSearchChange","useCallback","e","target","onSubmit","animateScroll","scrollToTop","onChange","onKeyPress","charCode","onClick","Header","src","logo","alt","ContentItem","item","episodes","setEpisodes","name","image","status","species","type","gender","origin","location","episode","id","Episodes","map","index","ContentList","content","api","getCharacters","page","fetch","App","imgList","setImgList","result","setResult","loading","setLoading","error","setError","searchValue","paramsSearch","setParamsSearch","paramsSelection10","useRef","request","array","a","param","res","json","results","filter","el","i","current","length","useFetchContent","fetchMore","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d786ced3.chunk.js","sourcesContent":["import \"./index.css\";\r\n\r\nconst Button = (props) => (\r\n  <button className=\"Button\" {...props} />\r\n);\r\n\r\nexport default Button;\r\n","import { useCallback, useState } from \"react\";\r\nimport { animateScroll } from \"react-scroll\";\r\nimport Button from \"../Button\";\r\nimport \"./index.css\";\r\n\r\nconst SearchInput = ({ onSearch }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const onSearchChange = useCallback((e) => setValue(e.target.value), []);\r\n  const onSubmit = useCallback(() => {\r\n    onSearch(value)\r\n    animateScroll.scrollToTop();\r\n  }, [value, onSearch]);\r\n\r\n  const onKeyPressHandler = (e) => {\r\n    if (e.charCode === 13) {\r\n      onSubmit();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"SearchInput\">\r\n      <input value={value} onChange={onSearchChange} onKeyPress={onKeyPressHandler} />\r\n      <Button onClick={onSubmit} >SUBMIT</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","export default __webpack_public_path__ + \"static/media/logo.e1f86449.svg\";","import SearchInput from \"../SearchInput\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport \"./index.css\";\r\n\r\nconst Header = ({ onSearch }) => (\r\n  <header className=\"Header\">\r\n    <img src={logo} className=\"Header-logo\" alt=\"logo\" />\r\n    <SearchInput onSearch={onSearch} />\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import {useState} from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst ContentList = ({content}) => {\r\n  return (\r\n    <div className=\"CharterList\">\r\n      {/* TODO: Display content */}\r\n      {/*{console.info(`Available content: ${content}`)}*/}\r\n\r\n      {content.map((item) => {\r\n        return <ContentItem key={item.id} item={item}/>\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ContentItem = ({item}) => {\r\n  let [episodes, setEpisodes] = useState(false)\r\n  return (\r\n    <div className=\"Container\" key={item.id}>\r\n      <div className=\"CharterName\"><h2>{item.name}</h2></div>\r\n      <div className=\"CharterInfo\">\r\n        <div className=\"CharterPhoto\"><img src={item.image} alt={item.name}/></div>\r\n        <div className=\"CommonInfo\">\r\n          <div><b>Status: </b>{item.status}</div>\r\n          <div><b>Species: </b>{item.species}</div>\r\n          <div><b>Type: </b>{item.type}</div>\r\n          <div><b>Gender: </b>{item.gender}</div>\r\n          <div><b>Origin name: </b>{item.origin.name}</div>\r\n          <div><b>Location: </b>{item.location.name}</div>\r\n          <div className=\"EpisodeContainer\"><b>Episodes: </b>{episodes ? <Episodes episodes={item.episode}/> :\r\n            <div>\r\n              <button className=\"ButtonShowEpisodes\" onClick={() => setEpisodes(true)}>Show episodes</button>\r\n            </div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Episodes = ({episodes}) => {\r\n  return (\r\n    <div className=\"EpisodeList\">\r\n      {episodes.map((episode, index) => {\r\n        return <div key={index} className=\"Episode\">\r\n          {episode}\r\n        </div>\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentList;\r\n","import {useCallback, useRef, useState} from \"react\";\r\n\r\nexport const useFetchContent = () => {\r\n  const [imgList, setImgList] = useState([]);\r\n  const [result, setResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [paramsSearch, setParamsSearch] = useState({searchValue: \"\", page: 1});\r\n  let paramsSelection10 = useRef(true)\r\n\r\n  const request = async (value, page, array, param = true) => {\r\n    setLoading(true)\r\n    try {\r\n      // New request or take the second portion of the previous request data\r\n      if (param) {\r\n        const res = await api.getCharacters(value, page)\r\n        const json = await res.json()\r\n        if (json.results) {\r\n          setResult(json.results)\r\n          const a = json.results.filter((el, i) => i < 10)\r\n          setImgList([...array, ...a])\r\n          paramsSelection10.current = false\r\n        } else {\r\n          setError(json.error)\r\n          setImgList(array)\r\n        }\r\n      } else {\r\n        const a = result.filter((el, i) => i >= 10)\r\n        if (a.length) {\r\n          setImgList([...array, ...a])\r\n        } else {\r\n          setError(\"There is no data anymore\")\r\n          setImgList(array)\r\n        }\r\n        paramsSelection10.current = true\r\n      }\r\n    } catch (e) {\r\n      setError(e)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const fetchFunction = useCallback(async (value) => {\r\n    setError(\"\")\r\n    setParamsSearch({...paramsSearch, searchValue: value, page: 1})\r\n    await request(value, 1, [])\r\n  }, [paramsSearch, result]);\r\n\r\n  // TODO: Put fetchMore method here\r\n  const fetchMore = useCallback(async (imgList) => {\r\n    const page = paramsSelection10.current ? paramsSearch.page + 1 : paramsSearch.page\r\n    setParamsSearch({...paramsSearch, page: page})\r\n    await request(paramsSearch.searchValue, page, imgList, paramsSelection10.current)\r\n  }, [paramsSearch, result, imgList]);\r\n  return [fetchFunction, fetchMore, imgList, loading, error];\r\n};\r\n\r\nconst api = {\r\n  getCharacters(value = \"\", page = 1) {\r\n    return fetch(`https://rickandmortyapi.com/api/character/?name=${value}&page=${page}`)\r\n  }\r\n}\r\n","import Header from \"./Header\";\r\nimport ContentList from \"./ContentList\";\r\nimport {useFetchContent} from \"../hooks/useFetchContent\";\r\nimport \"./App.css\";\r\nimport Button from \"./Button\";\r\nimport {useCallback} from \"react\";\r\n\r\nconst App = () => {\r\n  const [fetch, fetchMore, content, loading, error] = useFetchContent();\r\n  const onSubmit = useCallback(() => fetchMore(content), [content, fetchMore]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header onSearch={fetch}/>\r\n      <div>\r\n        <h1>Simple content list</h1>\r\n        <ContentList content={content}/>\r\n        {/* TODO: Put FetchMoreButton component here */}\r\n        {error && <h3 className=\"Error\">{error}</h3>}\r\n        {content.length !== 0 && <div className=\"ButtonNext\"><Button disabled={error || loading}\r\n                                                                     onClick={onSubmit}>NEXT</Button></div>}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}